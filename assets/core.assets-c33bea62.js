const r={"image/svg+xml":async e=>fetch(e.data).then(t=>t.text()).then(t=>({...e,data:t}))},i={};async function u(e,t){i[e]=t.type in r?await r[t.type].call(null,t):t}function p(e){return i[e]}function h(e){return Object.fromEntries(e.map(t=>[t,p(t)]))}async function d(e,t){let{path:a,meta:s}=t;a=a.replace(new RegExp("/musicblocks-v4/"),"");const c=await fetch(a).then(o=>o.blob()).then(o=>new Promise((l,m)=>{try{const n=new FileReader;n.onload=()=>l(n.result),n.readAsDataURL(o)}catch(n){m(n)}}));await u(e,{type:c.match(/data:(.+);base64/)[1],data:c,meta:s!==void 0?s:{}})}async function y(e,t){await Promise.all(e.map(({identifier:a,manifest:s})=>d(a,s).then(()=>{t!==void 0&&t(a)})))}export{p as getAsset,h as getAssets,d as importAsset,y as importAssets};
//# sourceMappingURL=core.assets-c33bea62.js.map
