{"version":3,"file":"core.i18n-6f1eaac8.js","sources":["../../src/core/i18n/index.ts"],"sourcesContent":["import type { TI18nFile, TI18nLang } from '@/@types/core/i18n';\n\n// -- private variables ----------------------------------------------------------------------------\n\nlet _strings: TI18nFile = {};\nlet _stringsEN: TI18nFile = {};\n\n// -- public functions -----------------------------------------------------------------------------\n\n/**\n * Loads dynamically the string file of requested language.\n * @param lang - requested language\n */\nexport async function importStrings(lang: TI18nLang = 'en') {\n    _stringsEN = (await import('./lang/en')).default as TI18nFile;\n    _strings =\n        lang === 'en'\n            ? { ..._stringsEN }\n            : ((await import(`./lang/${lang}.ts`)).default as TI18nFile);\n}\n\n/**\n * Returns i18n string map corresponding to string keys\n * @param keys list of string keys\n */\nexport function getStrings(keys: string[]): { [key: string]: string } {\n    return Object.fromEntries(\n        keys.map((key) => [\n            key,\n            key in _strings ? _strings[key] : key in _stringsEN ? _stringsEN[key] : key,\n        ]),\n    );\n}\n"],"names":["_strings","_stringsEN","importStrings","lang","__vitePreload","__variableDynamicImportRuntimeHelper","getStrings","keys","key"],"mappings":"qDAIA,IAAIA,EAAsB,CAAA,EACtBC,EAAwB,CAAA,EAQN,eAAAC,EAAcC,EAAkB,KAAM,CAC1CF,GAAA,MAAMG,EAAA,IAAA,OAAO,uBAAW,EAAA,kBAAA,GAAG,QAErCJ,EAAAG,IAAS,KACH,CAAE,GAAGF,CACH,GAAA,MAAMI,gMAA6B,OACnD,CAMO,SAASC,EAAWC,EAA2C,CAClE,OAAO,OAAO,YACVA,EAAK,IAAKC,GAAQ,CACdA,EACAA,KAAOR,EAAWA,EAASQ,CAAG,EAAIA,KAAOP,EAAaA,EAAWO,CAAG,EAAIA,CAAA,CAC3E,CAAA,CAET"}